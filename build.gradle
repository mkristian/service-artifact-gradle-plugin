buildscript {
    repositories {
        jcenter()

        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.1"
        classpath "com.gradle.publish:plugin-publish-plugin:0.9.0"
        classpath 'org.ysb33r.gradle:gradletest:0.5.3'
    }
}

apply plugin: 'codenarc'
apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'idea'
apply plugin: "com.jfrog.bintray"
apply plugin: "com.gradle.plugin-publish"
apply plugin: 'org.ysb33r.gradletest'

version = '0.3.1'
group = 'com.github.lookout'
description = 'Gradle plugin for building a prim and proper Lookout service artifact'
sourceCompatibility = '1.6'
targetCompatibility = '1.6'


// Dependency management
////////////////////////
configurations {
    gradleTest.extendsFrom compile
}

repositories {
    jcenter()

    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

dependencies {
    compile gradleApi()
    compile localGroovy()

    /* Git Gradle plugin (base components) */
    compile "org.ajoberstar:grgit:1.1.0+"

    /* asciidoctor gradle plugin */
    compile "org.asciidoctor:asciidoctor-gradle-plugin:1.5.2"

    /* JRuby related plugins */
    compile "com.github.jruby-gradle:jruby-gradle-plugin:0.1.17+"
    compile "com.github.jruby-gradle:jruby-gradle-jar-plugin:0.2.1+"

    /* Shadow jar plugin for building self-contained jar artifacts */
    compile "com.github.jengelman.gradle.plugins:shadow:1.2.1+"


    testCompile('org.spockframework:spock-core:1.0-groovy-2.3') {
        exclude module: 'groovy-all'
    }
    testCompile 'cglib:cglib-nodep:2.2.+'
}
////////////////////////


// Tasks
////////
test {
    testLogging {
        /* we want more test failure information, see:
         *  <http://mrhaki.blogspot.com/2013/05/gradle-goodness-show-more-information.html>
         */
        exceptionFormat = 'full'
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}
/* Whenever we're building an artifact, we should run the tests */
assemble.dependsOn check
jar.dependsOn check

gradleTest {
    /*
     * according to ysb33r there's not enough of a difference in APIs between
     * version 2.0->2.2 and 2.2->2.4 to be worth testing
     */
    versions '2.0', '2.2', '2.4'
    dependsOn jar
}

codenarc {
    sourceSets = [sourceSets.main]
    configFile = file('gradle/codenarc.xml')
}
assemble.dependsOn codenarcMain
////////



// Release/publication
//////////////////////
/* Add the sources jar to the list of artifacts to publish */
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
task groovydocJar(type: Jar, dependsOn: groovydoc) {
    classifier = 'groovydoc'
    from groovydoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives groovydocJar
}

bintray {
    user = project.bintrayUser
    key = project.bintrayKey
    publish = true
    dryRun = false
    configurations = ['archives']

    pkg {
        userOrg = 'lookout'
        repo = 'systems'
        name = 'service-artifact-plugin'
        labels = ['gradle', 'jruby', 'git', 'microservice']

        version {
            name = project.version
            vcsTag = "v${project.version}"
            desc = project.description
            attributes = ['gradle-plugin' : 'com.github.lookout.service-artifact:com.github.lookout:service-artifact-plugin']
        }
    }
}
bintrayUpload.dependsOn assemble

pluginBundle {
    website = 'https://github.com/lookout/service-artifact-gradle-plugin'
    vcsUrl = 'https://github.com/lookout/service-artifact-gradle-plugin'
    description = project.description
    tags = ['jruby', 'microservice', 'service']

    plugins {
        serviceArtifactPlugin {
            id = 'com.github.lookout.service-artifact'
            displayName = 'Service Artifact Plugin'
        }
    }
}

task publish(type: Exec) {
    group 'Publishing'
    description "Tag and publish the plugin"
    dependsOn bintrayUpload, publishPlugins
    commandLine 'git', 'tag', "v${project.version}"
}

//////////////////////


defaultTasks 'check', 'assemble', 'gradleTest'
